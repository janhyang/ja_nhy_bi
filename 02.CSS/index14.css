.owl {
    /* 원래 위치를 파악하기 위한 배경색 */
    background-color: lightblue;
    width: 300px;
    height: 300px;

    position: absolute;
    left: 100px;
}

img {
    width: 100%;
    height: 100%;
}

img:hover {
    /* 
        transform 속성
        - 요소의 모양, 크기, 위치 등을 변경하는데 사용.
    */

    /* 
        #1. skew()
        - 원하는 각도만큼 객체를 기울임.
        - x, y축 나누어 속성 부여 가능
            - skewX(x_deg)
            - skewY(y_deg)
        - x, y 동시 사용 원하는 경우
            - skew(x_deg, y_deg)
    */
    transform: skewX(30deg);
    transform: skewY(-30deg);
    transform: skew(30deg, -30deg);

    /* 
        #2. scale()
        - 크기 조절 (확대, 축소)
        - 1보다 큼 : 확대
        - 0~1 : 축소 = 0.n 만큼 확대
    */

    /* transform: scaleX(2); */
    /* transform: scaleY(2); */
    /* transform: scale(0.5); */
    /* transform: scale(2, 0.5); */

    /* 
        #3. rotate()
        - 회전
        - 주어진 각도만큼 회전
        - rotateX() : x 축을 기준으로 회전.
        - rotateY() : y 축을 기준으로 회전.
        - rotate() : 시계방향으로 회전.

        - 뒷면 안보이게
        - backface-visibility : hidden;
    */

    transform: rotateX(80deg);
    transform: rotateY(60deg);
    transform: rotate(55deg);

    transform: rotateY(180deg);
    backface-visibility: hidden;

    /* 
        #4. translate()
        - 이동
        - translateX() : x축을 기준으로 이동.
        - translateY() : y축을 기준으로 이동.
        - translate() : x, y축을 기준으로 이동.
    */

    transform: translateX(-70px);
    transform: translateY(-30px);
    transform: translate(50px, 50px);
    transform: translate(-50px, -50px); 

    /* 
        transition 속성
        - CSS 요소의 속성값이 변화 할 때 일정 시간 동안 부드럽게 변화가 일어나도록 설정.
        - transform 속성과 함께 자주 쓰인다.
        - transition 단일로도 사용 가능!
    */
    transform: scale(1.2);
    transition: transform 1s;
    /* 이미지가 변환 할 때 1초 동안 부드럽게 변환됨. */
}

/* transition 보충 설명 */
/* 
    * transition: 1s;
    - 간단히 모든 속성에 트랜지션을 적용하고 싶을 때 사용.
    - 변경 대상 속성이 많거나, 다양할 경우 적합.

    * transition: transform 1s;
    - 성능 최적화를 위해 특정 속성에만 트랜지션을 적용하고 싶을 때 사용.
    - 필요 없는 속성에는 트랜지션 효과가 적용되지 않도록 세밀하게 조정.
*/
div {
    width: 100px;
    height: 100px;
    background-color: #6495ed;
    /* # transition 한 번에 쓰는 방법 */
    transition: width 2s ease, background-color 4s linear;
}

div:hover {
    width: 200px;
    background-color: red;
}





/* .div2 {
    background-color: blueviolet;
} */








/* 간단 실습 */
.outer {
    width: 300px;
    height: 300px;
    background-color: lightgreen;
}

.inner {
    width: 100px;
    height: 100px;
    background-color: lightpink;
}

/* 실습 ver1. position, transform */
.outer1 {
    position: relative;
}

.inner1 {
    position: absolute;
    top: 50%;
    left: 50%;
    /* transform: translateX(-50%); */
    /* transform: translateY(-50%); */
    transform: translate(-50%, -50%);
}

/* 실습 ver2. flex */
.outer2 {
    display: flex;
    justify-content: center;
    align-items: center;
}